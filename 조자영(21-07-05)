# WEB TIL

- 이름: 조자영

- 날짜: 21-07-05

### ⚙️ 오늘 공부한 내용

1. 'Git 교과서 - 이호진' 읽고 Git 공부 

  “깃은 분산형 버전 관리 시스템”
  
  
####깃 단어 설명
  
1. 커밋(commit)

“깃은 커밋을 거쳐 모든 코드의 수정 이력을 기록합니다.”

  - 파일 및 폴더의 추가-변경 사항들을 기록하는 것을 의미

  - 이 커밋을 기준으로 코드를 관리

	+ 커밋으로 지정된 원본 객체는 수정이 불가

2. 푸시(push)

“자신의 코드 저장소를 원격 서버에 푸시하여 저장(동기화)합니다.”

  - 자신의 로컬 저장소(개인 pc의 저장소)에서 변경된 파일을 원격 저장소로 업로드하는 것

3. 풀(pull)

  - 원격 저장소의 변경 사항을 자신의 로컬 저장소에 적용하는 것
  
4. 펫치(fetch)

  - 원격 저장소의 변경 사항을 내려받는 것
  
  - 적용(병합)은 하지 않는다.
  
“또 다른 개발자의 소스를 원격 서버에서 풀 또는 펫치하여 언제든지 내려받을 수 있습니다.”

5. 브랜치

“깃은 하나의 소스 코드를 여러가지 브랜치로 분기하여 독립된 기능을 구현할 수 있다.”

  - 메인 개발 라인에서 분기된 하나의 갈래를 의미. 
  
  - 새로운 기능을 안전하게 관리하고 싶을 때, 추가로 메인 개발 라인에서 분기된 새 개발 라인을 만들어 개발하고, 개발이 완료되면 다시 메인 개발 라인에 병합.

6. 포크(folk)

“외부 개발자는 원격 저장소를 포크하여 소스 코드의 버그를 수정하거나 기능을 개선할 수 있다.”

  - 다른 사람의 원격 저장소를 가져와(복사하여) 자신의 원격 저장소를 만드는 것을 의미

7. 풀 리퀘스트(full request)

“수정한 소스 코드를 풀 리퀘스트하여 기존 코드에 병합할 수도 있다.”

  - 자신의 로컬 저장소에서 작업한 후, 이 작업을 원본 저장소에 반영해 달라고 요청하는 것

8. 스테쉬(stash)

  - 브랜치 새로 생성하기 전에 작업을 완료하지 않은 상태일 경우, 임시 저장하는 기능.
  
  - 스택의 원리를 가져 인덱스 가짐.
  
  - stash@{번호} 형태로 순차적으로 저장.
  
  - 목록 번호는 0부터 시작

*깃의 다섯 단계

초기화 -> 커밋1 -> 커밋2 -> 커밋3 -> (완료)

> (커밋1과 커밋3 사이에서 브랜치와 병합이 일어남)

초기화: 폴더를 깃 저장소로 변경합니다.
커밋: 변경된 코드의 이력을 기록합니다.
브랜치: 분리 격리된 코드 이력을 기록합니다.
병합: 기존 이력과 분리된 이력을 통합합니다.
푸시: 로컬 저장소의 이력을 서버로 전송 및 공유합니다.


2. 깃과 소스트리 설치 빛 환경 설정

*config 명령어

$ git config 설정값

>	새로운 config 파일 생성

$ git config –unset 이메일주소

>	기존에 설정된 환경 파일 삭제

$ git config -help

>	Config 명령어 옵션 확인

*로컬 사용자

  $ cd 저장소 폴더 -------- 깃 저장소 폴더
  $ git config user.name “사용자 이름”
  $ git config user.email “이메일 주소”


*글로벌 사용자

  $ git config –global user.name “사용자 이름”
  $ git config -global user.email “이메일 주소”


*환경설정 파일 확인 및 직접 수정

####config 명령어로 만든 환경 설정 파일은 깃 저장소 안에 .git/config 파일 형태로 저장되어 있다.

  $ mkdir 어쩌구
  >	어쩌구 폴더 생성

  $ cd 어쩌구
  >	만든 어쩌구 폴더로 이동

  $ git init
  >	깃 초기화

  $ git config user.name “사용자 이름”
  $ git config user.email “이메일 주소”

  $ ls .git
  >	깃 목록 보기

  $ ls ~/ .gitconfig -------- .gitconfig 폴더의 경로 보기

  $ cat .git/config
  >	cat 명령어로 내용 확인 


3. 깃 개념 잡기


4. 커밋

“시간에 따라 변화되는 내용만 저장”
“코드가 변화된 시간 순서에 따라 영구적으로 저장”


2. Github oauth 로그인 방법 공부


### ⚙️ 회고


- 프로젝트 부분 구현해야한다.

- Do it! Node.js 프로그래밍 읽고 실습
- 백엔드 프로그래밍 읽고 실습
